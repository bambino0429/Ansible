---
# This playbook will stop the instance, detach the old volume,
# create and attach the new volume, and restart the instance

  - name: Gather information about the failed servers
    ec2_remote_facts:
      aws_access_key: "{{ akey }}"
      aws_secret_key: "{{ pkey }}"
      region: "{{ aws_region }}"
      filters:
        instance-state-name: running
        "tag:Name": "{{ failed_servers }}"
    register: ec2_info

  - name: Stop the instance
    ec2:
      aws_secret_key: "{{ pkey }}"
      aws_access_key: "{{ akey }}"
      region: "{{ aws_region }}"
      instance_ids: "{{ ec2_info.instances.0.id }}"
      state: stopped
      wait: yes

  - name: Detach the old volume
    ec2_vol:
      aws_secret_key: "{{ pkey }}"
      aws_access_key: "{{ akey }}"
      region: "{{ aws_region }}"
      id: "{{ ec2_info.instances.0.block_device_mapping.volume_id }}"
      instance: None
  #        register: detach_vol

  - name: Creating a new volume from a snapshot
    ec2_vol:
      aws_secret_key: "{{ pkey }}"
      aws_access_key: "{{ akey }}"
      # Change it to variable one day
      snapshot: "{{ snap-03be103088e65ef08 }}"
      region: "{{ aws_region }}"
      volume_type: gp2
      instance: "{{ ec2_info.instances.0.id }}"
      device_name: /dev/sda1
  #        volume_size: 60
    register: ec2_vol
  #        tags: attach

  - name: Attach the Created volume to an instance
    ec2_vol:
      aws_secret_key: "{{ pkey }}"
      aws_access_key: "{{ akey }}"
      region: "{{ aws_region }}"
      instance: "{{ ec2_info.instances.0.id }}"
      id: "{{ ec2_vol.volume_id }}"
      device_name: /dev/sda1

  - name: Start the instance
    ec2:
      aws_secret_key: "{{ pkey }}"
      aws_access_key: "{{ akey }}"
      region: "{{ aws_region }}"
      instance_ids: "{{ ec2_info.instances.0.id }}"
      state: running
